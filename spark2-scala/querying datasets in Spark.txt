querying datasets in Spark
===============================

val ordersDF = sqlContext.read.table("retaildb.orders")
ordersDF.registerTempTable("t")

sqlContext.sql("select * from t where order_status = 'CLOSED' ORDER BY order_date DESC").show
ordersDF.where("order_status = 'CLOSED'").sort("order_date DESC").show

sqlContext.sql("select * from t where order_status = 'CLOSED'").show
ordersDF.where("order_status = 'CLOSED'").show

sqlContext.sql("select * from t where order_status = 'COMPLETE'").show
ordersDF.where("order_status = 'COMPLETE'").show
ordersDF.filter("order_status = 'COMPLETE'").show

sqlContext.sql("select order_id, order_customer_id, order_status from t where order_status = 'CLOSED' ORDER BY order_date DESC").show

sqlContext.sql("select order_id, order_customer_id, order_status from t where order_status = 'CLOSED' ORDER BY order_date DESC limit 10").show



JOIN OPERATION
=======================

select o.order_id, sum(i.order_item_subtotal) total from orders o join order_items i on o.order_id = i.order_item_order_id  group by o.order_id;

val ordersDF = sqlContext.read.table("retaildb.orders")
val orderItemsDF = sqlContext.read.table("retaildb.order_items")

ordersDF.registerTempTable("o")
orderItemsDF.registerTempTable("i")

val orderTotalDF = sqlContext.sql("select o.order_id, sum(i.order_item_subtotal) total from o join i on o.order_id = i.order_item_order_id group by o.order_id")

//join and project
val joinDF = orderItemsDF.join(ordersDF, $"order_item_order_id" === $"order_id").select("order_id", "order_item_subtotal")

//aggregation 
val aggDF = joinDF.groupBy("order_id").sum("order_item_subtotal")

//presentation
aggDF.show

//write to hive
aggDF.write.insertInto("")


//write to text
aggDF.write.text("")

//write to parquet
aggDF.write.parquet("")